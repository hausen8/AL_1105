(author: Julian Koenig)
(version: 1.1)
(date: 03/31/23)


o<probe_calibration> sub

  (1. find Center; 2. turn spindle 180 degrees; 3. find center again)
  #<tool_number_1>			= #<_ini[probe]TOOL_NUMBER_1>
  #<tool_number_2>			= #<_ini[probe]TOOL_NUMBER_2>
  #<tool_number_3>			= #<_ini[probe]TOOL_NUMBER_3>
  #<ref_diameter> 			= #<_hal[pyvcp.probe_diameter]> 

  #<add_probetrips>			= #<_ini[probe]ADD_PROBETRIPS>

  (Cancel G92 offsets)
  G92.1

  (Probe Tool Safety Check)
  o100 if [#5400 EQ 0]
      (MSG, No specified probe tool in spindle, aborting)
      o<probe_calibration> return
  
  o100 elseif [[#5400 EQ #<tool_number_1>] OR [#5400 EQ #<tool_number_2>] OR [#5400 EQ #<tool_number_3>]]
  
    #<internal_tool_number>	= 1
  o101 if [#5400 EQ #<tool_number_2>] 
    #<internal_tool_number>	= 2
  o101 elseif [#5400 EQ #<tool_number_3>]
    #<internal_tool_number>	= 3
  o101 endif
  
  o102 if [#5410 EQ 0]
      (MSG, No tipdiameter specified. Please enter tipdiameter to tooltable, aborting)
      o<probe_calibration> return
  o102 endif



  (Set tooloffsets and ranges to 0.0001, for safety reasons at the beginning of the macros)
  G10 L1 P#5400 X0.0001 Y0.0001 I0.0001 J0.0001


  (Call sub "probe_pocket" with setting WC0 to zero to find center position)
  o<probe_pocket> call [0][#<add_probetrips>][1]
  #<x_probed_width> 	= #1001
  #<y_probed_width> 	= #1003
  #10 = [#<ref_diameter> - #<x_probed_width>]
  #11 = [#<ref_diameter> - #<y_probed_width>]

  (MSG, Please turn spindle 180 degrees and resume.)
  M0

  (Call sub "probe_pocket" without setting WC0 to zero to find center position)
  o<probe_pocket> call [1][#<add_probetrips>][1]
  #8 = [#<_x> / 2]
  #9 = [#<_y> / 2]
  

  (Set Values to smallest amount different to zero in case. Just in case so that safety loops at beginning of macros are working.)
  o103 if [#8 EQ 0]
    #8 = 0.000001
  o103 endif
  o104 if [#9 EQ 0]
    #9 = 0.000001
  o104 endif
  o105 if [#10 EQ 0]
    #10 = 0.000001
  o105 endif
  o106 if [#11 EQ 0]
    #11 = 0.000001
  o106 endif
  
  (Set tooloffsets and ranges)
  G10 L1 P#5400 X#8 Y#9 I#10 J#11  


  (Set current coordsystem to zero)
  G10 L20 P#5220 X[#<_x> / 2] Y[#<_y> / 2]
  
  #<probe_trigger_runout> = [2 * SQRT[ABS[#8 * #8 + #9 * #9]]]

  (debug, Probe triggermidpoint runout: #<probe_trigger_runout>)
  o110 if [#<probe_trigger_runout> GT 0.10]
      (MSG, Triggermiddlepoint runout is greater then 0.1mm. Manually adjustment recommended.)
      o<probe_calibration> return
  o110 endif
 
  o100 else
    (MSG, No specified probe tool in spindle, aborting)
    o<probe_calibration> return
  o100 endif

o<probe_calibration> endsub
M2 (end program)
