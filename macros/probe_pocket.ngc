(author: Julian Koenig; Originally by Chris P - Probe Basic)
(version: 1.1)
(date: 03/31/23)

(Probe round pocket center start measure x and y Diam, find xy center position)
(Start probe position is rough center of pocket a safe distance below top edge)
(no z move will be initiated in this routine. end position is hole center)

o<probe_pocket> sub
  #<probe_mode>				= #1 	(0 for setting WC0; 1 for not setting WC0)
  #<cal_mode>				= #3	(0 for normal; 1 for used while calibration) 
  #<xy_clearance> 			= #<_ini[probe]XY_CLEARANCE>
  #<tool_number_1>			= #<_ini[probe]TOOL_NUMBER_1>
  #<tool_number_2>			= #<_ini[probe]TOOL_NUMBER_2>
  #<tool_number_3>			= #<_ini[probe]TOOL_NUMBER_3>
  #<max_xy_distance> 		= #<_ini[probe]MAX_XY_DISTANCE>
  #<probe_slow_fr> 			= #<_ini[probe]VEL_SLOW>
  #<probe_fast_fr> 			= #<_ini[probe]VEL_FAST>
  #<probe_ff>				= #<_ini[probe]VEL_FF>
  #<diameter_hint> 			= #<_hal[pyvcp.probe_diameter]>
  #<dev_msg>				= #<_ini[probe]DEV_MSG>
  
  #<tip_diameter>			= #5410
  #<add_probetrips>			= #2 (0 or not defined means one trip)
  
  #<x_offset>				= #5401
  #<y_offset>				= #5402
  #<probe_range_x>			= #5411
  #<probe_range_y>			= #5412

  (Cancel G92 offsets)
  G92.1

  #<workspace_x> = #[5201 + [20 * #5220]]
  #<workspace_y> = #[5202 + [20 * #5220]]
 
  (Probe Tool Safety Check)
  o100 if [#5400 EQ 0]
      (MSG, No specified probe tool in spindle, aborting)
      o<probe_pocket> return
  
  o100 elseif [[#5400 EQ #<tool_number_1>] OR [#5400 EQ #<tool_number_2>] OR [#5400 EQ #<tool_number_3>]]
  
    #<internal_tool_number>	= 1
  o101 if [#5400 EQ #<tool_number_2>] 
    #<internal_tool_number>	= 2
  o101 elseif [#5400 EQ #<tool_number_3>]
    #<internal_tool_number>	= 3
  o101 endif
  
  o102 if [#5410 EQ 0]
      (MSG, No tipdiameter specified. Please enter tipdiameter to tooltable, aborting)
      o<probe_calibration> return
  o102 endif
    
  o107 if [[#<x_offset> EQ 0] OR [#<probe_range_x> EQ 0]]
      (MSG, No calibration data found in tooltable. Please do a calibration, aborting)
      o<probe_pocket> return
  o107 endif


  (Call sub "probe_x_minus" to Probe x-)
  o<probe_x_minus> call [[#<diameter_hint> - #<tip_diameter>] / 2][1][#<add_probetrips>][1]
  #<x_minus_probed> = #1000
  
  
  
  G91
  F[#<probe_ff>]
  G38.3 X[#<diameter_hint> - #<tip_diameter> - 5 - [2 * #<xy_clearance>]]



  (Call sub "probe_x_plus" to Probe x+)
  o<probe_x_plus> call [5 + #<xy_clearance>][1][#<add_probetrips>][1]
  #<x_plus_probed> = #1000

  (probed center calculation)
  #<x_center_probed> = [[#<x_plus_probed> + #<x_minus_probed>] / 2]

  #1002 = #<x_center_probed>

  (Probe Completion Move to X Zero)
  G90
  F[#<probe_ff>]
  G38.3 X[#<x_center_probed>]







  (Call sub "probe_y_plus" to Probe Y+)
  o<probe_y_plus> call [[#<diameter_hint> - #<tip_diameter>] / 2][1][#<add_probetrips>][1]

  #<y_plus_probed> = #1000
  
  G91
  F[#<probe_ff>]
  G38.3 Y-[#<diameter_hint> - #<tip_diameter> - 5 - [2 * #<xy_clearance>]]
  
  

  (Call sub "probe_y_minus" to Probe Y-)
  o<probe_y_minus> call [5 + #<xy_clearance>][1][#<add_probetrips>][1]

  #<y_minus_probed> = #1000

  (probed center calculation)
  #<y_center_probed> = [[#<y_plus_probed> + #<y_minus_probed>] / 2]

  #1004 = #<y_center_probed>
  o104 If [#<dev_msg> EQ 1] 
    (debug, y_center_probed: #1004)
  o104 endif

  (Probe Completion Move to Y Zero)
  G90
  F[#<probe_ff>]
  G38.3 Y[#<y_center_probed>]

  G91
  F[#<probe_ff>]
  G38.3 X-[[#<diameter_hint> / 2]- [#<tip_diameter> / 2] - 5 - #<xy_clearance>]




  (Call sub "probe_x_minus" to Probe x-)
  o<probe_x_minus> call [[5 + #<xy_clearance>] / 2][1][#<add_probetrips>][1]

  #<x_minus_probed> = #1000


  G91
  F[#<probe_ff>]
  G38.3 X[#<diameter_hint> - #<tip_diameter> - 5 - [2 * #<xy_clearance>]]


  (Call sub "probe_x_plus" to Probe x+)
  o<probe_x_plus> call [5 + #<xy_clearance>][1][#<add_probetrips>][1]

  #<x_plus_probed> = #1000

  (probed center calculation)
  #<x_center_probed> = [[#<x_plus_probed> + #<x_minus_probed>] / 2]

  (calculate X Width Probed)
  #<raw_width> = [#<x_plus_probed> - #<x_minus_probed>]

  (Completed probed width calculations)
  #<x_probed_width> = [#<raw_width> + #<probe_range_x>]

  #1001 = #<x_probed_width>
  #1002 = #<x_center_probed>
  
  o105 If [#<dev_msg> EQ 1] 
    (debug, x_probed_width: #1001)
    (debug, x_center_probed: #1002)
  o105 endif


  G90
  F[#<probe_ff>]
  G38.3 X[#<x_center_probed>]

  G91
  F[#<probe_ff>]
  G38.3 Y[[#<diameter_hint> / 2]- [#<tip_diameter> / 2] - 5 - #<xy_clearance>]




  (Call sub "probe_y_plus" to Probe Y+)
  o<probe_y_plus> call [[5 + #<xy_clearance>] / 2][1][#<add_probetrips>][1]

  #<y_plus_probed> = #1000
  
  
  G91
  F[#<probe_ff>]
  G38.3 Y-[#<diameter_hint> - #<tip_diameter> - 5 - [2 * #<xy_clearance>]]

  (Call sub "probe_y_minus" to Probe Y-)
  o<probe_y_minus> call [5 + #<xy_clearance>][1][#<add_probetrips>][1]

  #<y_minus_probed> = #1000

  (probed center calculation)
  #<y_center_probed> = [[#<y_plus_probed> + #<y_minus_probed>] / 2]

  (calculate Y Width Probed)
  #<raw_width> = [#<y_plus_probed> - #<y_minus_probed>]

  (Completed probed diameter calculations)
  #<y_probed_width> = [#<raw_width> + #<probe_range_y>]

  
  #1003 = #<y_probed_width>
  #1004 = #<y_center_probed>
  
  #<averaged_diam> = [[#<x_probed_width> + #<y_probed_width>] / 2]
  #1000 = #<averaged_diam>
  

  G90
  F[#<probe_ff>]
  G38.3 Y[#<y_center_probed>]
  
  
  (probe mode rule for WCO or probe position measuring only)
  o110 if [#<probe_mode> EQ 0]
    G10 L2 P#5220 X[#<x_center_probed> + #<workspace_x> + #<x_offset>]
    G10 L2 P#5220 Y[#<y_center_probed> + #<workspace_y> + #<y_offset>]
    
    (Move to X0 Y0 so that Midpoint can be set to other values by G10 L2)
    G90
    F[#<probe_ff>]
    G38.3 X0 Y0
  o110 endif

  
  
  
  
  o106 if [#<cal_mode> EQ 0]
    (debug, Probed diameter: #1000. Midpoint set to X0 Y0. Use G10 L20 P0 X... Y... in case you need other values.)
  o106 elseif [[#<cal_mode> EQ 1] AND [#<probe_mode> EQ 1]]
    #10 = [#<averaged_diam> + #<tip_diameter>]
    (debug, Calibration mode. Probed diameter is estimated: #10. Do another pocket probe to check calculated values.)
  o106 endif


  
  o100 else
    (MSG, No specified probe tool in spindle, aborting)
    o<probe_pocket> return
  o100 endif


  
o<probe_pocket> endsub
M2 (end program)
